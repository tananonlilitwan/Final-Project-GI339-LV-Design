/*using UnityEngine;

public class PlayerController : MonoBehaviour
{
    public float moveSpeed = 5f; // ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô
    public float rotationSpeed = 200f; // ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡∏Å‡∏≤‡∏£‡∏´‡∏°‡∏∏‡∏ô‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£
    public float jumpForce = 8f; // ‡πÅ‡∏£‡∏á‡∏Å‡∏£‡∏∞‡πÇ‡∏î‡∏î
    public float gravity = 20f; // ‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πà‡∏á‡∏Ç‡∏≠‡∏á‡πÅ‡∏£‡∏á‡πÇ‡∏ô‡πâ‡∏°‡∏ñ‡πà‡∏ß‡∏á

    private CharacterController characterController;
    private Vector3 moveDirection;
    private bool isGrounded;

    void Start()
    {
        characterController = GetComponent<CharacterController>();
    }

    void Update()
    {
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏™‡∏±‡∏°‡∏ú‡∏±‡∏™‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        isGrounded = characterController.isGrounded;

        // ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏î‡∏¥‡∏ô‡∏´‡∏ô‡πâ‡∏≤-‡∏ñ‡∏≠‡∏¢‡∏´‡∏•‡∏±‡∏á
        float verticalInput = Input.GetAxis("Vertical");

        // ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏õ‡∏∏‡πà‡∏°‡∏´‡∏°‡∏∏‡∏ô‡∏ã‡πâ‡∏≤‡∏¢-‡∏Ç‡∏ß‡∏≤
        float horizontalInput = Input.GetAxis("Horizontal");

        // ‡∏´‡∏°‡∏∏‡∏ô‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£
        transform.Rotate(Vector3.up * horizontalInput * rotationSpeed * Time.deltaTime);

        // ‡∏ñ‡πâ‡∏≤‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏≠‡∏¢‡∏π‡πà‡∏ö‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡πÉ‡∏´‡πâ‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡∏≤‡∏°‡∏ó‡∏¥‡∏®‡∏ó‡∏µ‡πà‡∏´‡∏±‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÑ‡∏õ
        if (isGrounded)
        {
            moveDirection = transform.forward * verticalInput * moveSpeed;

            // ‡∏Å‡∏î Spacebar ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏£‡∏∞‡πÇ‡∏î‡∏î
            if (Input.GetKeyDown(KeyCode.Space))
            {
                moveDirection.y = jumpForce;
            }
        }

        if (Input.GetKey(KeyCode.LeftShift))
        {
            moveSpeed = 8f; // ‡πÄ‡∏£‡πá‡∏ß‡∏Ç‡∏∂‡πâ‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î Shift
        }
        else
        {
            moveSpeed = 5f;
        }


        // ‡πÉ‡∏ä‡πâ Gravity ‡πÉ‡∏´‡πâ‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏ï‡∏Å‡∏•‡∏á
        moveDirection.y -= gravity * Time.deltaTime;

        // ‡πÉ‡∏ä‡πâ Character Controller ‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà
        characterController.Move(moveDirection * Time.deltaTime);
    }
}*/

using UnityEngine;

public class PlayerController : MonoBehaviour
{
    public float moveSpeed = 5f;
    public float jumpForce = 8f;
    public float gravity = 20f;
    public GameObject gun; // ‡∏õ‡∏∑‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á/‡∏ã‡πà‡∏≠‡∏ô

    private CharacterController characterController;
    private Vector3 moveDirection;
    private bool isGrounded;
    private Camera mainCamera; // ‡∏Å‡∏•‡πâ‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏Å
    private bool isGunVisible = true; // ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á‡∏õ‡∏∑‡∏ô

    void Start()
    {
        characterController = GetComponent<CharacterController>();
        mainCamera = Camera.main; // ‡∏î‡∏∂‡∏á‡∏Å‡∏•‡πâ‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏Å‡∏°‡∏≤‡πÉ‡∏ä‡πâ
    }

    void Update()
    {
        isGrounded = characterController.isGrounded;

        // ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏î‡∏¥‡∏ô‡∏´‡∏ô‡πâ‡∏≤-‡∏ñ‡∏≠‡∏¢‡∏´‡∏•‡∏±‡∏á
        float verticalInput = Input.GetAxis("Vertical");

        // ‡∏´‡∏°‡∏∏‡∏ô‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡πÉ‡∏´‡πâ‡∏´‡∏±‡∏ô‡∏ï‡∏≤‡∏°‡∏Å‡∏•‡πâ‡∏≠‡∏á
        Vector3 cameraForward = mainCamera.transform.forward;
        cameraForward.y = 0; // ‡∏•‡πá‡∏≠‡∏Å‡πÅ‡∏Å‡∏ô Y ‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏Å‡πâ‡∏°/‡πÄ‡∏á‡∏¢
        transform.forward = cameraForward.normalized;

        // ‡∏ñ‡πâ‡∏≤‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏≠‡∏¢‡∏π‡πà‡∏ö‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡πÉ‡∏´‡πâ‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡∏≤‡∏°‡∏ó‡∏¥‡∏®‡∏ó‡∏µ‡πà‡∏´‡∏±‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÑ‡∏õ
        if (isGrounded)
        {
            moveDirection = transform.forward * verticalInput * moveSpeed;

            if (Input.GetKeyDown(KeyCode.Space))
            {
                moveDirection.y = jumpForce;
            }
        }

        if (Input.GetKey(KeyCode.LeftShift))
        {
            moveSpeed = 8f;
        }
        else
        {
            moveSpeed = 5f;
        }

        moveDirection.y -= gravity * Time.deltaTime;
        characterController.Move(moveDirection * Time.deltaTime);
        
        // üü¢ ‡∏Å‡∏î "1" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ã‡πà‡∏≠‡∏ô/‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏∑‡∏ô
        if (Input.GetKeyDown(KeyCode.Alpha1))
        {
            ToggleGunVisibility();
        }
    }
    
    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ã‡πà‡∏≠‡∏ô/‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏∑‡∏ô
    private void ToggleGunVisibility()
    {
        isGunVisible = !isGunVisible;
        if (gun != null)
        {
            gun.SetActive(isGunVisible);
        }
    }
}
